Index: app/src/main/java/com/mvvm/java/core/di/module/ActivityModule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.core.di.module;\r\n\r\nimport android.content.Context;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.mvvm.java.core.di.ActivityContext;\r\nimport com.mvvm.java.core.utilities.rx.SchedulerProvider;\r\nimport com.mvvm.java.core.utilities.rx.SchedulerProviderImplement;\r\n\r\nimport dagger.Module;\r\nimport dagger.Provides;\r\nimport io.reactivex.rxjava3.disposables.CompositeDisposable;\r\n\r\n@Module\r\npublic class ActivityModule {\r\n\r\n    private final AppCompatActivity activity;\r\n\r\n    public ActivityModule(AppCompatActivity activity) {\r\n        this.activity = activity;\r\n    }\r\n\r\n    @Provides\r\n    @ActivityContext\r\n    Context provideContext() {\r\n        return activity;\r\n    }\r\n\r\n    @Provides\r\n    AppCompatActivity provideActivity() {\r\n        return activity;\r\n    }\r\n\r\n    @Provides\r\n    CompositeDisposable provideCompositeDisposable() {\r\n        return new CompositeDisposable();\r\n    }\r\n\r\n    @Provides\r\n    SchedulerProvider provideSchedulerProvider() {\r\n        return new SchedulerProviderImplement();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/core/di/module/ActivityModule.java b/app/src/main/java/com/mvvm/java/core/di/module/ActivityModule.java
--- a/app/src/main/java/com/mvvm/java/core/di/module/ActivityModule.java	
+++ b/app/src/main/java/com/mvvm/java/core/di/module/ActivityModule.java	
@@ -3,10 +3,16 @@
 import android.content.Context;
 
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.lifecycle.ViewModelProvider;
 
 import com.mvvm.java.core.di.ActivityContext;
+import com.mvvm.java.core.di.PerActivity;
 import com.mvvm.java.core.utilities.rx.SchedulerProvider;
 import com.mvvm.java.core.utilities.rx.SchedulerProviderImplement;
+import com.mvvm.java.sample.login.LoginViewModel;
+import com.mvvm.java.sample.login.RegisterViewModel;
+import com.mvvm.java.sample.splash.SplashViewModel;
+import com.mvvm.java.sample.welcome.WelcomeViewModel;
 
 import dagger.Module;
 import dagger.Provides;
@@ -41,4 +47,28 @@
     SchedulerProvider provideSchedulerProvider() {
         return new SchedulerProviderImplement();
     }
+
+    @Provides
+    @PerActivity
+    SplashViewModel provideSplashViewModel() {
+        return new ViewModelProvider(this.activity).get(SplashViewModel.class);
+    }
+
+    @Provides
+    @PerActivity
+    WelcomeViewModel provideWelcomeViewModel() {
+        return new ViewModelProvider(this.activity).get(WelcomeViewModel.class);
+    }
+
+    @Provides
+    @PerActivity
+    LoginViewModel provideLoginViewModel() {
+        return new ViewModelProvider(this.activity).get(LoginViewModel.class);
+    }
+
+    @Provides
+    @PerActivity
+    RegisterViewModel provideRegisterViewModel() {
+        return new ViewModelProvider(this.activity).get(RegisterViewModel.class);
+    }
 }
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">BaseJavaMVVM</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	
@@ -1,3 +1,9 @@
 <resources>
     <string name="app_name">BaseJavaMVVM</string>
+    <string name="welcome_headline_1">Headline sample 1</string>
+    <string name="welcome_headline_2">Headline sample 2</string>
+    <string name="welcome_headline_3">Headline sample 3</string>
+    <string name="welcome_description_1">Description welcome sample 1</string>
+    <string name="welcome_description_2">Description welcome sample 2</string>
+    <string name="welcome_description_3">Description welcome sample 3</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/mvvm/java/sample/login/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.login;\r\n\r\npublic class LoginActivity {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/login/LoginActivity.java b/app/src/main/java/com/mvvm/java/sample/login/LoginActivity.java
--- a/app/src/main/java/com/mvvm/java/sample/login/LoginActivity.java	
+++ b/app/src/main/java/com/mvvm/java/sample/login/LoginActivity.java	
@@ -1,4 +1,22 @@
 package com.mvvm.java.sample.login;
 
-public class LoginActivity {
+import com.mvvm.java.core.base.mvvm.MVVMActivity;
+import com.mvvm.java.core.di.component.ActivityComponent;
+import com.mvvm.java.databinding.ActivityLoginBinding;
+
+public class LoginActivity extends MVVMActivity<ActivityLoginBinding, LoginViewModel> {
+
+    @Override
+    public ActivityLoginBinding createViewBinding() {
+        ActivityComponent component = getActivityComponent();
+        if (component != null) {
+            component.inject(this);
+        }
+        return ActivityLoginBinding.inflate(getLayoutInflater());
+    }
+
+    @Override
+    public void setup() {
+
+    }
 }
Index: app/src/main/java/com/mvvm/java/sample/welcome/WelcomeViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.welcome;public class WelcomeViewModel {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeViewModel.java b/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeViewModel.java
--- a/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeViewModel.java	
+++ b/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeViewModel.java	
@@ -1,2 +1,36 @@
-package com.mvvm.java.sample.welcome;public class WelcomeViewModel {
-}
+package com.mvvm.java.sample.welcome;
+
+import com.mvvm.java.R;
+import com.mvvm.java.core.base.BaseMvvmViewModel;
+import com.mvvm.java.core.data.DataManager;
+import com.mvvm.java.core.utilities.rx.SchedulerProvider;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.inject.Inject;
+
+import io.reactivex.rxjava3.disposables.CompositeDisposable;
+
+public class WelcomeViewModel extends BaseMvvmViewModel {
+
+    private final List<Welcome> welcomeList;
+
+    @Inject
+    public WelcomeViewModel(DataManager dataManager,
+                            SchedulerProvider schedulerProvider,
+                            CompositeDisposable compositeDisposable) {
+        super(dataManager, schedulerProvider, compositeDisposable);
+        this.welcomeList = new ArrayList<>();
+    }
+
+    public List<Welcome> getWelcomeList() {
+        Welcome welcome1 = new Welcome(R.drawable.ic_alarm_on, R.string.welcome_headline_1, R.string.welcome_description_1);
+        Welcome welcome2 = new Welcome(R.drawable.ic_app_blocking, R.string.welcome_headline_2, R.string.welcome_description_2);
+        Welcome welcome3 = new Welcome(R.drawable.ic_approval, R.string.welcome_headline_3, R.string.welcome_description_3);
+        this.welcomeList.add(welcome1);
+        this.welcomeList.add(welcome2);
+        this.welcomeList.add(welcome3);
+        return this.welcomeList;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/mvvm/java/sample/login/LoginViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.login;\r\n\r\npublic class LoginViewModel {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/login/LoginViewModel.java b/app/src/main/java/com/mvvm/java/sample/login/LoginViewModel.java
--- a/app/src/main/java/com/mvvm/java/sample/login/LoginViewModel.java	
+++ b/app/src/main/java/com/mvvm/java/sample/login/LoginViewModel.java	
@@ -1,4 +1,19 @@
 package com.mvvm.java.sample.login;
 
-public class LoginViewModel {
+import com.mvvm.java.core.base.BaseMvvmViewModel;
+import com.mvvm.java.core.data.DataManager;
+import com.mvvm.java.core.utilities.rx.SchedulerProvider;
+
+import javax.inject.Inject;
+
+import io.reactivex.rxjava3.disposables.CompositeDisposable;
+
+public class LoginViewModel extends BaseMvvmViewModel {
+
+    @Inject
+    public LoginViewModel(DataManager dataManager,
+                          SchedulerProvider schedulerProvider,
+                          CompositeDisposable compositeDisposable) {
+        super(dataManager, schedulerProvider, compositeDisposable);
+    }
 }
Index: app/src/main/java/com/mvvm/java/sample/login/RegisterActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.login;public class RegisterActivity {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/login/RegisterActivity.java b/app/src/main/java/com/mvvm/java/sample/login/RegisterActivity.java
--- a/app/src/main/java/com/mvvm/java/sample/login/RegisterActivity.java	
+++ b/app/src/main/java/com/mvvm/java/sample/login/RegisterActivity.java	
@@ -1,2 +1,21 @@
-package com.mvvm.java.sample.login;public class RegisterActivity {
+package com.mvvm.java.sample.login;
+
+import com.mvvm.java.core.base.mvvm.MVVMActivity;
+import com.mvvm.java.core.di.component.ActivityComponent;
+import com.mvvm.java.databinding.ActivityRegisterBinding;
+
+public class RegisterActivity extends MVVMActivity<ActivityRegisterBinding, RegisterViewModel> {
+    @Override
+    public ActivityRegisterBinding createViewBinding() {
+        ActivityComponent component = getActivityComponent();
+        if (component != null) {
+            component.inject(this);
+        }
+        return ActivityRegisterBinding.inflate(getLayoutInflater());
+    }
+
+    @Override
+    public void setup() {
+
+    }
 }
Index: app/src/main/java/com/mvvm/java/sample/splash/SplashViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.splash;\r\n\r\nimport com.mvvm.java.core.base.BaseMvvmViewModel;\r\n\r\npublic class SplashViewModel extends BaseMvvmViewModel {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/splash/SplashViewModel.java b/app/src/main/java/com/mvvm/java/sample/splash/SplashViewModel.java
--- a/app/src/main/java/com/mvvm/java/sample/splash/SplashViewModel.java	
+++ b/app/src/main/java/com/mvvm/java/sample/splash/SplashViewModel.java	
@@ -1,6 +1,19 @@
 package com.mvvm.java.sample.splash;
 
 import com.mvvm.java.core.base.BaseMvvmViewModel;
+import com.mvvm.java.core.data.DataManager;
+import com.mvvm.java.core.utilities.rx.SchedulerProvider;
+
+import javax.inject.Inject;
+
+import io.reactivex.rxjava3.disposables.CompositeDisposable;
 
 public class SplashViewModel extends BaseMvvmViewModel {
+
+    @Inject
+    public SplashViewModel(DataManager dataManager,
+                           SchedulerProvider schedulerProvider,
+                           CompositeDisposable compositeDisposable) {
+        super(dataManager, schedulerProvider, compositeDisposable);
+    }
 }
Index: app/src/main/java/com/mvvm/java/sample/welcome/DotIndicatorAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.welcome;public class DotIndicatorAdapter {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/welcome/DotIndicatorAdapter.java b/app/src/main/java/com/mvvm/java/sample/welcome/DotIndicatorAdapter.java
--- a/app/src/main/java/com/mvvm/java/sample/welcome/DotIndicatorAdapter.java	
+++ b/app/src/main/java/com/mvvm/java/sample/welcome/DotIndicatorAdapter.java	
@@ -1,2 +1,73 @@
-package com.mvvm.java.sample.welcome;public class DotIndicatorAdapter {
-}
+package com.mvvm.java.sample.welcome;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.mvvm.java.core.base.BaseViewHolder;
+import com.mvvm.java.databinding.ItemDotIndicatorBinding;
+
+import java.util.List;
+
+@Deprecated
+public class DotIndicatorAdapter extends RecyclerView.Adapter<BaseViewHolder> {
+
+    private final List<DotIndicator> dotIndicatorList;
+    private final CallBack callBack;
+
+    public DotIndicatorAdapter(List<DotIndicator> dotIndicatorList, CallBack callBack) {
+        this.dotIndicatorList = dotIndicatorList;
+        this.callBack = callBack;
+    }
+
+    @NonNull
+    @Override
+    public BaseViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        LayoutInflater inflater = LayoutInflater.from(parent.getContext());
+        ItemDotIndicatorBinding binding = ItemDotIndicatorBinding.inflate(inflater, parent, false);
+        return new DotIndicatorHolder(binding);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull BaseViewHolder holder, int position) {
+        holder.onBind(position);
+    }
+
+    @Override
+    public int getItemCount() {
+        if (dotIndicatorList != null) {
+            return dotIndicatorList.size();
+        }
+        return 0;
+    }
+
+    class DotIndicatorHolder extends BaseViewHolder {
+        private final ItemDotIndicatorBinding binding;
+
+        public DotIndicatorHolder(@NonNull ItemDotIndicatorBinding binding) {
+            super(binding.getRoot());
+            this.binding = binding;
+        }
+
+        @Override
+        public void onBind(int position) {
+            super.onBind(position);
+            DotIndicator item = dotIndicatorList.get(position);
+            if (item.isActive()) {
+                this.binding.active.setVisibility(View.VISIBLE);
+                this.binding.inactive.setVisibility(View.GONE);
+            }
+        }
+
+        @Override
+        public void clear() {
+        }
+    }
+
+    public interface CallBack {
+        void onPageChangeListener(int position);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/mvvm/java/sample/login/RegisterViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.login;public class RegisterViewModel {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/login/RegisterViewModel.java b/app/src/main/java/com/mvvm/java/sample/login/RegisterViewModel.java
--- a/app/src/main/java/com/mvvm/java/sample/login/RegisterViewModel.java	
+++ b/app/src/main/java/com/mvvm/java/sample/login/RegisterViewModel.java	
@@ -1,2 +1,19 @@
-package com.mvvm.java.sample.login;public class RegisterViewModel {
+package com.mvvm.java.sample.login;
+
+import com.mvvm.java.core.base.BaseMvvmViewModel;
+import com.mvvm.java.core.data.DataManager;
+import com.mvvm.java.core.utilities.rx.SchedulerProvider;
+
+import javax.inject.Inject;
+
+import io.reactivex.rxjava3.disposables.CompositeDisposable;
+
+public class RegisterViewModel extends BaseMvvmViewModel {
+
+    @Inject
+    public RegisterViewModel(DataManager dataManager,
+                             SchedulerProvider schedulerProvider,
+                             CompositeDisposable compositeDisposable) {
+        super(dataManager, schedulerProvider, compositeDisposable);
+    }
 }
Index: app/src/main/res/layout/item_author.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n             android:layout_width=\"match_parent\"\r\n             android:layout_height=\"match_parent\">\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_author.xml b/app/src/main/res/layout/item_author.xml
--- a/app/src/main/res/layout/item_author.xml	
+++ b/app/src/main/res/layout/item_author.xml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             android:layout_width="match_parent"
-             android:layout_height="match_parent">
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.mvvm.java\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.BaseJavaMVVM\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".sample.container.MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -15,15 +15,23 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.BaseJavaMVVM"
         tools:targetApi="31">
+
         <activity
-            android:name=".sample.container.MainActivity"
+            android:name=".sample.splash.SplashActivity"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
-
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+
+        <activity android:name=".sample.welcome.WelcomeActivity" />
+
+        <activity android:name=".sample.login.LoginActivity" />
+
+        <activity android:name=".sample.login.RegisterActivity" />
+
+        <activity android:name=".sample.container.MainActivity" />
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/mvvm/java/sample/splash/SplashActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.splash;\r\n\r\npublic class SplashActivity {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/splash/SplashActivity.java b/app/src/main/java/com/mvvm/java/sample/splash/SplashActivity.java
--- a/app/src/main/java/com/mvvm/java/sample/splash/SplashActivity.java	
+++ b/app/src/main/java/com/mvvm/java/sample/splash/SplashActivity.java	
@@ -1,4 +1,24 @@
 package com.mvvm.java.sample.splash;
 
-public class SplashActivity {
+import android.annotation.SuppressLint;
+
+import com.mvvm.java.core.base.mvvm.MVVMActivity;
+import com.mvvm.java.core.di.component.ActivityComponent;
+import com.mvvm.java.databinding.ActivitySplashBinding;
+
+@SuppressLint("CustomSplashScreen")
+public class SplashActivity extends MVVMActivity<ActivitySplashBinding, SplashViewModel> {
+    @Override
+    public ActivitySplashBinding createViewBinding() {
+        ActivityComponent component = getActivityComponent();
+        if (component != null) {
+            component.inject(this);
+        }
+        return ActivitySplashBinding.inflate(getLayoutInflater());
+    }
+
+    @Override
+    public void setup() {
+
+    }
 }
Index: app/src/main/res/layout/activity_splash.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_splash.xml b/app/src/main/res/layout/activity_splash.xml
--- a/app/src/main/res/layout/activity_splash.xml	
+++ b/app/src/main/res/layout/activity_splash.xml	
@@ -1,6 +1,14 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/rootView"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="match_parent"
+    tools:context=".sample.splash.SplashActivity">
 
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+    <androidx.appcompat.widget.AppCompatImageView
+        android:id="@+id/imageView"
+        android:layout_width="288dp"
+        android:layout_height="288dp"
+        android:layout_gravity="center" />
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_register.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n             android:layout_width=\"match_parent\"\r\n             android:layout_height=\"match_parent\">\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_register.xml b/app/src/main/res/layout/activity_register.xml
--- a/app/src/main/res/layout/activity_register.xml	
+++ b/app/src/main/res/layout/activity_register.xml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             android:layout_width="match_parent"
-             android:layout_height="match_parent">
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/item_welcome.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n             android:layout_width=\"match_parent\"\r\n             android:layout_height=\"match_parent\">\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_welcome.xml b/app/src/main/res/layout/item_welcome.xml
--- a/app/src/main/res/layout/item_welcome.xml	
+++ b/app/src/main/res/layout/item_welcome.xml	
@@ -1,6 +1,33 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             android:layout_width="match_parent"
-             android:layout_height="match_parent">
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:gravity="center"
+    android:orientation="vertical">
+
+    <androidx.appcompat.widget.AppCompatImageView
+        android:id="@+id/image"
+        android:layout_width="256dp"
+        android:layout_height="256dp"
+        android:scaleType="centerCrop" />
+
+    <androidx.appcompat.widget.AppCompatTextView
+        android:id="@+id/textHeadline"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:gravity="center"
+        android:paddingHorizontal="16dp"
+        android:textSize="16sp"
+        android:textStyle="bold" />
 
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+    <androidx.appcompat.widget.AppCompatTextView
+        android:id="@+id/textDescription"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:gravity="center"
+        android:paddingHorizontal="16dp"
+        android:textSize="13sp"
+        android:textStyle="normal" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/dot.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector android:height=\"24dp\" android:viewportHeight=\"31.955\"\r\n    android:viewportWidth=\"31.955\" android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path android:fillColor=\"#030104\" android:pathData=\"M27.25,4.655C20.996,-1.571 10.88,-1.546 4.656,4.706C-1.571,10.96 -1.548,21.076 4.705,27.3c6.256,6.226 16.374,6.203 22.597,-0.051C33.526,20.995 33.505,10.878 27.25,4.655z\"/>\r\n    <path android:fillColor=\"#030104\" android:pathData=\"M13.288,23.896l-1.768,5.207c2.567,0.829 5.331,0.886 7.926,0.17l-0.665,-5.416C17.01,24.487 15.067,24.5 13.288,23.896zM8.12,13.122l-5.645,-0.859c-0.741,2.666 -0.666,5.514 0.225,8.143l5.491,-1.375C7.452,17.138 7.426,15.029 8.12,13.122zM28.763,11.333l-4.965,1.675c0.798,2.106 0.716,4.468 -0.247,6.522l5.351,0.672C29.827,17.319 29.78,14.193 28.763,11.333zM11.394,2.883l1.018,5.528c2.027,-0.954 4.356,-1.05 6.442,-0.288l1.583,-5.137C17.523,1.94 14.328,1.906 11.394,2.883z\"/>\r\n    <path android:fillColor=\"#030104\" android:pathData=\"M15.979,15.977m-6.117,0a6.117,6.117 0,1 1,12.234 0a6.117,6.117 0,1 1,-12.234 0\"/>\r\n</vector>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/dot.xml b/app/src/main/res/drawable/dot.xml
--- a/app/src/main/res/drawable/dot.xml	
+++ b/app/src/main/res/drawable/dot.xml	
@@ -1,6 +1,15 @@
-<vector android:height="24dp" android:viewportHeight="31.955"
-    android:viewportWidth="31.955" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#030104" android:pathData="M27.25,4.655C20.996,-1.571 10.88,-1.546 4.656,4.706C-1.571,10.96 -1.548,21.076 4.705,27.3c6.256,6.226 16.374,6.203 22.597,-0.051C33.526,20.995 33.505,10.878 27.25,4.655z"/>
-    <path android:fillColor="#030104" android:pathData="M13.288,23.896l-1.768,5.207c2.567,0.829 5.331,0.886 7.926,0.17l-0.665,-5.416C17.01,24.487 15.067,24.5 13.288,23.896zM8.12,13.122l-5.645,-0.859c-0.741,2.666 -0.666,5.514 0.225,8.143l5.491,-1.375C7.452,17.138 7.426,15.029 8.12,13.122zM28.763,11.333l-4.965,1.675c0.798,2.106 0.716,4.468 -0.247,6.522l5.351,0.672C29.827,17.319 29.78,14.193 28.763,11.333zM11.394,2.883l1.018,5.528c2.027,-0.954 4.356,-1.05 6.442,-0.288l1.583,-5.137C17.523,1.94 14.328,1.906 11.394,2.883z"/>
-    <path android:fillColor="#030104" android:pathData="M15.979,15.977m-6.117,0a6.117,6.117 0,1 1,12.234 0a6.117,6.117 0,1 1,-12.234 0"/>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="31.955"
+    android:viewportHeight="31.955">
+    <path
+        android:fillColor="#030104"
+        android:pathData="M27.25,4.655C20.996,-1.571 10.88,-1.546 4.656,4.706C-1.571,10.96 -1.548,21.076 4.705,27.3c6.256,6.226 16.374,6.203 22.597,-0.051C33.526,20.995 33.505,10.878 27.25,4.655z" />
+    <path
+        android:fillColor="#030104"
+        android:pathData="M13.288,23.896l-1.768,5.207c2.567,0.829 5.331,0.886 7.926,0.17l-0.665,-5.416C17.01,24.487 15.067,24.5 13.288,23.896zM8.12,13.122l-5.645,-0.859c-0.741,2.666 -0.666,5.514 0.225,8.143l5.491,-1.375C7.452,17.138 7.426,15.029 8.12,13.122zM28.763,11.333l-4.965,1.675c0.798,2.106 0.716,4.468 -0.247,6.522l5.351,0.672C29.827,17.319 29.78,14.193 28.763,11.333zM11.394,2.883l1.018,5.528c2.027,-0.954 4.356,-1.05 6.442,-0.288l1.583,-5.137C17.523,1.94 14.328,1.906 11.394,2.883z" />
+    <path
+        android:fillColor="#030104"
+        android:pathData="M15.979,15.977m-6.117,0a6.117,6.117 0,1 1,12.234 0a6.117,6.117 0,1 1,-12.234 0" />
 </vector>
Index: app/src/main/java/com/mvvm/java/sample/welcome/Welcome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.welcome;public class Welcome {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/welcome/Welcome.java b/app/src/main/java/com/mvvm/java/sample/welcome/Welcome.java
--- a/app/src/main/java/com/mvvm/java/sample/welcome/Welcome.java	
+++ b/app/src/main/java/com/mvvm/java/sample/welcome/Welcome.java	
@@ -1,2 +1,25 @@
-package com.mvvm.java.sample.welcome;public class Welcome {
+package com.mvvm.java.sample.welcome;
+
+public class Welcome {
+    private final int image;
+    private final int headline;
+    private final int description;
+
+    public Welcome(int image, int headline, int description) {
+        this.image = image;
+        this.headline = headline;
+        this.description = description;
+    }
+
+    public int getImage() {
+        return this.image;
+    }
+
+    public int getHeadline() {
+        return this.headline;
+    }
+
+    public int getDescription() {
+        return this.description;
+    }
 }
Index: app/src/main/res/layout/activity_welcome.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n             android:layout_width=\"match_parent\"\r\n             android:layout_height=\"match_parent\">\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_welcome.xml b/app/src/main/res/layout/activity_welcome.xml
--- a/app/src/main/res/layout/activity_welcome.xml	
+++ b/app/src/main/res/layout/activity_welcome.xml	
@@ -1,6 +1,117 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             android:layout_width="match_parent"
-             android:layout_height="match_parent">
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context=".sample.welcome.WelcomeActivity">
+
+    <androidx.viewpager2.widget.ViewPager2
+        android:id="@+id/viewPager"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1" />
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_horizontal"
+        android:gravity="center"
+        android:orientation="horizontal"
+        android:paddingVertical="6dp">
+
+        <FrameLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginHorizontal="3dp">
+
+            <androidx.appcompat.widget.AppCompatImageView
+                android:id="@+id/dotIndicatorInactive1"
+                android:layout_width="8dp"
+                android:layout_height="8dp"
+                android:layout_gravity="center"
+                android:src="@drawable/dot"
+                android:tint="@color/teal_200"
+                android:visibility="visible" />
+
+            <androidx.appcompat.widget.AppCompatImageView
+                android:id="@+id/dotIndicatorActive1"
+                android:layout_width="12dp"
+                android:layout_height="12dp"
+                android:layout_gravity="center"
+                android:src="@drawable/dot"
+                android:tint="@color/teal_700"
+                android:visibility="gone" />
+        </FrameLayout>
 
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+        <FrameLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginHorizontal="3dp">
+
+            <androidx.appcompat.widget.AppCompatImageView
+                android:id="@+id/dotIndicatorInactive2"
+                android:layout_width="8dp"
+                android:layout_height="8dp"
+                android:layout_gravity="center"
+                android:src="@drawable/dot"
+                android:tint="@color/teal_200"
+                android:visibility="gone" />
+
+            <androidx.appcompat.widget.AppCompatImageView
+                android:id="@+id/dotIndicatorActive2"
+                android:layout_width="12dp"
+                android:layout_height="12dp"
+                android:layout_gravity="center"
+                android:src="@drawable/dot"
+                android:tint="@color/teal_700"
+                android:visibility="visible" />
+        </FrameLayout>
+
+        <FrameLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginHorizontal="3dp">
+
+            <androidx.appcompat.widget.AppCompatImageView
+                android:id="@+id/dotIndicatorInactive3"
+                android:layout_width="8dp"
+                android:layout_height="8dp"
+                android:layout_gravity="center"
+                android:src="@drawable/dot"
+                android:tint="@color/teal_200"
+                android:visibility="visible" />
+
+            <androidx.appcompat.widget.AppCompatImageView
+                android:id="@+id/dotIndicatorActive3"
+                android:layout_width="12dp"
+                android:layout_height="12dp"
+                android:layout_gravity="center"
+                android:src="@drawable/dot"
+                android:tint="@color/teal_700"
+                android:visibility="gone" />
+        </FrameLayout>
+    </LinearLayout>
+
+    <!--    <androidx.recyclerview.widget.RecyclerView-->
+    <!--        android:id="@+id/rcvDot"-->
+    <!--        android:layout_width="wrap_content"-->
+    <!--        android:layout_height="wrap_content"-->
+    <!--        android:layout_gravity="center_horizontal"-->
+    <!--        android:orientation="horizontal"-->
+    <!--        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"-->
+    <!--        tools:itemCount="3"-->
+    <!--        tools:listitem="@layout/item_dot_indicator" />-->
+
+    <androidx.appcompat.widget.AppCompatButton
+        android:id="@+id/buttonNext"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="24dp"
+        android:layout_marginTop="16dp"
+        android:layout_marginBottom="56dp"
+        android:textAllCaps="false"
+        android:textSize="16sp"
+        android:textStyle="bold"
+        tools:text="Next" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/mvvm/java/sample/welcome/WelcomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.welcome;public class WelcomeActivity {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeActivity.java b/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeActivity.java
--- a/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeActivity.java	
+++ b/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeActivity.java	
@@ -1,2 +1,60 @@
-package com.mvvm.java.sample.welcome;public class WelcomeActivity {
-}
+package com.mvvm.java.sample.welcome;
+
+import android.view.View;
+
+import androidx.lifecycle.ViewModelProvider;
+import androidx.viewpager2.widget.ViewPager2;
+
+import com.mvvm.java.core.base.mvvm.MVVMActivity;
+import com.mvvm.java.core.di.component.ActivityComponent;
+import com.mvvm.java.databinding.ActivityWelcomeBinding;
+
+public class WelcomeActivity extends MVVMActivity<ActivityWelcomeBinding, WelcomeViewModel> {
+
+    @Override
+    public ActivityWelcomeBinding createViewBinding() {
+        ActivityComponent component = getActivityComponent();
+        if (component != null) {
+            component.inject(this);
+        }
+        return ActivityWelcomeBinding.inflate(getLayoutInflater());
+    }
+
+    @Override
+    public void setup() {
+        WelcomeAdapter adapter = new WelcomeAdapter(viewModel.getWelcomeList());
+        this.viewBinding.viewPager.setAdapter(adapter);
+        this.viewBinding.viewPager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
+            @Override
+            public void onPageSelected(int position) {
+                super.onPageSelected(position);
+                switch (position) {
+                    case 0:
+                        viewBinding.dotIndicatorActive1.setVisibility(View.VISIBLE);
+                        viewBinding.dotIndicatorInactive1.setVisibility(View.GONE);
+                        viewBinding.dotIndicatorActive2.setVisibility(View.GONE);
+                        viewBinding.dotIndicatorInactive2.setVisibility(View.VISIBLE);
+                        viewBinding.dotIndicatorActive3.setVisibility(View.GONE);
+                        viewBinding.dotIndicatorInactive3.setVisibility(View.VISIBLE);
+                        break;
+                    case 1:
+                        viewBinding.dotIndicatorActive1.setVisibility(View.GONE);
+                        viewBinding.dotIndicatorInactive1.setVisibility(View.VISIBLE);
+                        viewBinding.dotIndicatorActive2.setVisibility(View.VISIBLE);
+                        viewBinding.dotIndicatorInactive2.setVisibility(View.GONE);
+                        viewBinding.dotIndicatorActive3.setVisibility(View.GONE);
+                        viewBinding.dotIndicatorInactive3.setVisibility(View.VISIBLE);
+                        break;
+                    case 2:
+                        viewBinding.dotIndicatorActive1.setVisibility(View.GONE);
+                        viewBinding.dotIndicatorInactive1.setVisibility(View.VISIBLE);
+                        viewBinding.dotIndicatorActive2.setVisibility(View.GONE);
+                        viewBinding.dotIndicatorInactive2.setVisibility(View.VISIBLE);
+                        viewBinding.dotIndicatorActive3.setVisibility(View.VISIBLE);
+                        viewBinding.dotIndicatorInactive3.setVisibility(View.GONE);
+                        break;
+                }
+            }
+        });
+    }
+}
\ No newline at end of file
Index: ../Model-View-Presenter-Java/.idea/libraries/Gradle__com_amitshekhar_android_android_networking_1_0_2_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"Gradle: com.amitshekhar.android:android-networking:1.0.2@aar\">\r\n    <CLASSES>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/transforms-3/42d62aa4e68a48596637c756035f07f6/transformed/jetified-android-networking-1.0.2/jars/classes.jar!/\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/42d62aa4e68a48596637c756035f07f6/transformed/jetified-android-networking-1.0.2/res\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/42d62aa4e68a48596637c756035f07f6/transformed/jetified-android-networking-1.0.2/AndroidManifest.xml\" />\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/transforms-3/008e87d8dee1d5405176e027a98ce8d7/transformed/jetified-android-networking-1.0.2/jars/classes.jar!/\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/008e87d8dee1d5405176e027a98ce8d7/transformed/jetified-android-networking-1.0.2/AndroidManifest.xml\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/008e87d8dee1d5405176e027a98ce8d7/transformed/jetified-android-networking-1.0.2/res\" />\r\n    </CLASSES>\r\n    <JAVADOC>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.amitshekhar.android/android-networking/1.0.2/866743b4b91a1e598595ed7dd365add8d38f94be/android-networking-1.0.2-javadoc.jar!/\" />\r\n    </JAVADOC>\r\n    <SOURCES>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.amitshekhar.android/android-networking/1.0.2/45745c4b3c155243f77a7431f200ca60106a27e4/android-networking-1.0.2-sources.jar!/\" />\r\n    </SOURCES>\r\n  </library>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Model-View-Presenter-Java/.idea/libraries/Gradle__com_amitshekhar_android_android_networking_1_0_2_aar.xml b/../Model-View-Presenter-Java/.idea/libraries/Gradle__com_amitshekhar_android_android_networking_1_0_2_aar.xml
--- a/../Model-View-Presenter-Java/.idea/libraries/Gradle__com_amitshekhar_android_android_networking_1_0_2_aar.xml	
+++ b/../Model-View-Presenter-Java/.idea/libraries/Gradle__com_amitshekhar_android_android_networking_1_0_2_aar.xml	
@@ -7,6 +7,9 @@
       <root url="jar://$USER_HOME$/.gradle/caches/transforms-3/008e87d8dee1d5405176e027a98ce8d7/transformed/jetified-android-networking-1.0.2/jars/classes.jar!/" />
       <root url="file://$USER_HOME$/.gradle/caches/transforms-3/008e87d8dee1d5405176e027a98ce8d7/transformed/jetified-android-networking-1.0.2/AndroidManifest.xml" />
       <root url="file://$USER_HOME$/.gradle/caches/transforms-3/008e87d8dee1d5405176e027a98ce8d7/transformed/jetified-android-networking-1.0.2/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-3/99a728e90ace67bd39f9de997284e5db/transformed/jetified-android-networking-1.0.2/res" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-3/99a728e90ace67bd39f9de997284e5db/transformed/jetified-android-networking-1.0.2/AndroidManifest.xml" />
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-3/99a728e90ace67bd39f9de997284e5db/transformed/jetified-android-networking-1.0.2/jars/classes.jar!/" />
     </CLASSES>
     <JAVADOC>
       <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.amitshekhar.android/android-networking/1.0.2/866743b4b91a1e598595ed7dd365add8d38f94be/android-networking-1.0.2-javadoc.jar!/" />
Index: ../Model-View-Presenter-Java/.idea/libraries/Gradle__io_github_inflationx_calligraphy3_3_1_1_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"Gradle: io.github.inflationx:calligraphy3:3.1.1@aar\">\r\n    <CLASSES>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/transforms-3/9016ecde02ba397acf47fe9241939295/transformed/jetified-calligraphy3-3.1.1/jars/classes.jar!/\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/9016ecde02ba397acf47fe9241939295/transformed/jetified-calligraphy3-3.1.1/res\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/9016ecde02ba397acf47fe9241939295/transformed/jetified-calligraphy3-3.1.1/AndroidManifest.xml\" />\r\n    </CLASSES>\r\n    <JAVADOC />\r\n    <SOURCES />\r\n  </library>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Model-View-Presenter-Java/.idea/libraries/Gradle__io_github_inflationx_calligraphy3_3_1_1_aar.xml b/../Model-View-Presenter-Java/.idea/libraries/Gradle__io_github_inflationx_calligraphy3_3_1_1_aar.xml
--- a/../Model-View-Presenter-Java/.idea/libraries/Gradle__io_github_inflationx_calligraphy3_3_1_1_aar.xml	
+++ b/../Model-View-Presenter-Java/.idea/libraries/Gradle__io_github_inflationx_calligraphy3_3_1_1_aar.xml	
@@ -5,7 +5,11 @@
       <root url="file://$USER_HOME$/.gradle/caches/transforms-3/9016ecde02ba397acf47fe9241939295/transformed/jetified-calligraphy3-3.1.1/res" />
       <root url="file://$USER_HOME$/.gradle/caches/transforms-3/9016ecde02ba397acf47fe9241939295/transformed/jetified-calligraphy3-3.1.1/AndroidManifest.xml" />
     </CLASSES>
-    <JAVADOC />
-    <SOURCES />
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/io.github.inflationx/calligraphy3/3.1.1/ee0e0d8fdcc92db6323063da61949dececb3b6ab/calligraphy3-3.1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/io.github.inflationx/calligraphy3/3.1.1/c5d2228e95c60d0a3e887139f08e4f7e5e515499/calligraphy3-3.1.1-sources.jar!/" />
+    </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: app/src/main/java/com/mvvm/java/core/custom/TextField.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.core.custom;public class TextField {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/core/custom/TextField.java b/app/src/main/java/com/mvvm/java/core/custom/TextField.java
--- a/app/src/main/java/com/mvvm/java/core/custom/TextField.java	
+++ b/app/src/main/java/com/mvvm/java/core/custom/TextField.java	
@@ -1,2 +1,4 @@
-package com.mvvm.java.core.custom;public class TextField {
+package com.mvvm.java.core.custom;
+
+public class TextField {
 }
Index: ../Model-View-Presenter-Java/.idea/libraries/Gradle__uk_co_chrisjenx_calligraphy_2_2_0_aar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"Gradle: uk.co.chrisjenx:calligraphy:2.2.0@aar\">\r\n    <CLASSES>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/transforms-3/1db0adc9bab47bf5e5112ed71907c2a3/transformed/jetified-calligraphy-2.2.0/jars/classes.jar!/\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/1db0adc9bab47bf5e5112ed71907c2a3/transformed/jetified-calligraphy-2.2.0/res\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/1db0adc9bab47bf5e5112ed71907c2a3/transformed/jetified-calligraphy-2.2.0/AndroidManifest.xml\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/97784c974a169e64383fedfeaedb80cc/transformed/jetified-calligraphy-2.2.0/res\" />\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/transforms-3/97784c974a169e64383fedfeaedb80cc/transformed/jetified-calligraphy-2.2.0/jars/classes.jar!/\" />\r\n      <root url=\"file://$USER_HOME$/.gradle/caches/transforms-3/97784c974a169e64383fedfeaedb80cc/transformed/jetified-calligraphy-2.2.0/AndroidManifest.xml\" />\r\n    </CLASSES>\r\n    <JAVADOC>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/uk.co.chrisjenx/calligraphy/2.2.0/9cbe9b4d5702c21607a062681320cc59c391ad83/calligraphy-2.2.0-javadoc.jar!/\" />\r\n    </JAVADOC>\r\n    <SOURCES>\r\n      <root url=\"jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/uk.co.chrisjenx/calligraphy/2.2.0/1c9d5b9dbf2bfe7b615dfb6b526f004f63a5772c/calligraphy-2.2.0-sources.jar!/\" />\r\n    </SOURCES>\r\n  </library>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Model-View-Presenter-Java/.idea/libraries/Gradle__uk_co_chrisjenx_calligraphy_2_2_0_aar.xml b/../Model-View-Presenter-Java/.idea/libraries/Gradle__uk_co_chrisjenx_calligraphy_2_2_0_aar.xml
--- a/../Model-View-Presenter-Java/.idea/libraries/Gradle__uk_co_chrisjenx_calligraphy_2_2_0_aar.xml	
+++ b/../Model-View-Presenter-Java/.idea/libraries/Gradle__uk_co_chrisjenx_calligraphy_2_2_0_aar.xml	
@@ -7,6 +7,9 @@
       <root url="file://$USER_HOME$/.gradle/caches/transforms-3/97784c974a169e64383fedfeaedb80cc/transformed/jetified-calligraphy-2.2.0/res" />
       <root url="jar://$USER_HOME$/.gradle/caches/transforms-3/97784c974a169e64383fedfeaedb80cc/transformed/jetified-calligraphy-2.2.0/jars/classes.jar!/" />
       <root url="file://$USER_HOME$/.gradle/caches/transforms-3/97784c974a169e64383fedfeaedb80cc/transformed/jetified-calligraphy-2.2.0/AndroidManifest.xml" />
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-3/8a07e8710221a27d69f4ea44e8d1357a/transformed/jetified-calligraphy-2.2.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-3/8a07e8710221a27d69f4ea44e8d1357a/transformed/jetified-calligraphy-2.2.0/AndroidManifest.xml" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-3/8a07e8710221a27d69f4ea44e8d1357a/transformed/jetified-calligraphy-2.2.0/res" />
     </CLASSES>
     <JAVADOC>
       <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/uk.co.chrisjenx/calligraphy/2.2.0/9cbe9b4d5702c21607a062681320cc59c391ad83/calligraphy-2.2.0-javadoc.jar!/" />
Index: app/src/main/res/layout/text_field.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n             android:layout_width=\"match_parent\"\r\n             android:layout_height=\"match_parent\">\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/text_field.xml b/app/src/main/res/layout/text_field.xml
--- a/app/src/main/res/layout/text_field.xml	
+++ b/app/src/main/res/layout/text_field.xml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-             android:layout_width="match_parent"
-             android:layout_height="match_parent">
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: ../Model-View-Presenter-Java/.idea/modules/BaseMVP.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module external.linked.project.id=\"BaseMVP\" external.linked.project.path=\"$MODULE_DIR$/../..\" external.root.project.path=\"$MODULE_DIR$/../..\" external.system.id=\"GRADLE\" external.system.module.group=\"\" external.system.module.version=\"unspecified\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"java-gradle\" name=\"Java-Gradle\">\r\n      <configuration>\r\n        <option name=\"BUILDABLE\" value=\"false\" />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$/../..\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/../../.gradle\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/../../build\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Model-View-Presenter-Java/.idea/modules/BaseMVP.iml b/../Model-View-Presenter-Java/.idea/modules/BaseMVP.iml
--- a/../Model-View-Presenter-Java/.idea/modules/BaseMVP.iml	
+++ b/../Model-View-Presenter-Java/.idea/modules/BaseMVP.iml	
@@ -1,12 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module external.linked.project.id="BaseMVP" external.linked.project.path="$MODULE_DIR$/../.." external.root.project.path="$MODULE_DIR$/../.." external.system.id="GRADLE" external.system.module.group="" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
-  <component name="FacetManager">
-    <facet type="java-gradle" name="Java-Gradle">
-      <configuration>
-        <option name="BUILDABLE" value="false" />
-      </configuration>
-    </facet>
-  </component>
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
     <content url="file://$MODULE_DIR$/../..">
Index: app/src/main/java/com/mvvm/java/sample/welcome/WelcomeAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.welcome;public class WelcomeAdapter {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeAdapter.java b/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeAdapter.java
--- a/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeAdapter.java	
+++ b/app/src/main/java/com/mvvm/java/sample/welcome/WelcomeAdapter.java	
@@ -1,2 +1,64 @@
-package com.mvvm.java.sample.welcome;public class WelcomeAdapter {
-}
+package com.mvvm.java.sample.welcome;
+
+import android.view.LayoutInflater;
+import android.view.ViewGroup;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.mvvm.java.core.base.BaseViewHolder;
+import com.mvvm.java.databinding.ItemWelcomeBinding;
+
+import java.util.List;
+
+public class WelcomeAdapter extends RecyclerView.Adapter<BaseViewHolder> {
+
+    private final List<Welcome> welcomes;
+
+    public WelcomeAdapter(List<Welcome> welcomes) {
+        this.welcomes = welcomes;
+    }
+
+    @NonNull
+    @Override
+    public BaseViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        LayoutInflater inflater = LayoutInflater.from(parent.getContext());
+        ItemWelcomeBinding binding = ItemWelcomeBinding.inflate(inflater, parent, false);
+        return new WelcomeAdapter.WelcomeHolder(binding);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull BaseViewHolder holder, int position) {
+        holder.onBind(position);
+    }
+
+    @Override
+    public int getItemCount() {
+        if (welcomes != null) {
+            return welcomes.size();
+        }
+        return 0;
+    }
+
+    class WelcomeHolder extends BaseViewHolder {
+        private final ItemWelcomeBinding binding;
+
+        public WelcomeHolder(@NonNull ItemWelcomeBinding binding) {
+            super(binding.getRoot());
+            this.binding = binding;
+        }
+
+        @Override
+        public void onBind(int position) {
+            super.onBind(position);
+            Welcome item = welcomes.get(position);
+            this.binding.image.setImageResource(item.getImage());
+            this.binding.textHeadline.setText(item.getHeadline());
+            this.binding.textDescription.setText(item.getDescription());
+        }
+
+        @Override
+        public void clear() {
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/mvvm/java/core/base/BaseRecyclerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.core.base;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.DrawableRes;\r\nimport androidx.annotation.IntDef;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.mvvm.java.core.utilities.AppLogger;\r\nimport com.mvvm.java.core.utilities.StringUtils;\r\nimport com.mvvm.java.databinding.ItemListHeaderBinding;\r\nimport com.mvvm.java.databinding.ItemLoadMoreBinding;\r\n\r\nimport java.lang.annotation.Retention;\r\nimport java.lang.annotation.RetentionPolicy;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic abstract class BaseRecyclerViewAdapter<T> extends RecyclerView.Adapter<BaseViewHolder> {\r\n    public static final int LOAD_MORE = 0;\r\n    public static final int HEADER = 1;\r\n    public static final int DATA = 2;\r\n\r\n    @IntDef({LOAD_MORE, HEADER, DATA})\r\n    @Retention(RetentionPolicy.SOURCE)\r\n    public @interface ITEM_TYPE {\r\n    }\r\n\r\n    protected Context context;\r\n    protected List<BaseAdapterModel<T>> itemList;\r\n    protected ItemClickListener<T> itemClickListener;\r\n\r\n    public BaseRecyclerViewAdapter(AppCompatActivity activityContext) {\r\n        this.context = activityContext;\r\n        this.itemList = new ArrayList<>();\r\n    }\r\n\r\n    public void setItemClickListener(ItemClickListener<T> itemClickListener) {\r\n        this.itemClickListener = itemClickListener;\r\n    }\r\n\r\n    public void reset() {\r\n        this.itemList.clear();\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    public List<T> getData() {\r\n        List<T> data = new ArrayList<>();\r\n        for (int i = 0; i < itemList.size(); i++) {\r\n            if (itemList.get(i).type == DATA) {\r\n                data.add(itemList.get(i).data);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    public void addHeader(Header header) {\r\n        itemList.add(new BaseAdapterModel<>(header));\r\n        notifyItemInserted(itemList.size() - 1);\r\n    }\r\n\r\n    public void addLoadMore() {\r\n        itemList.add(new BaseAdapterModel<>());\r\n        notifyItemInserted(itemList.size() - 1);\r\n    }\r\n\r\n    public void removeLoadMore() {\r\n        if (!itemList.isEmpty() && itemList.get(itemList.size() - 1).type == LOAD_MORE) {\r\n            itemList.remove(itemList.size() - 1);\r\n            notifyItemRemoved(itemList.size());\r\n        }\r\n    }\r\n\r\n    public void addData(List<T> dataList) {\r\n        for (T data : dataList) {\r\n            itemList.add(new BaseAdapterModel<>(data));\r\n        }\r\n        notifyItemRangeInserted(itemList.size() - dataList.size(), dataList.size());\r\n    }\r\n\r\n    public void add(T data) {\r\n        itemList.add(new BaseAdapterModel<>(data));\r\n        notifyItemInserted(itemList.size() - 1);\r\n    }\r\n\r\n    public void remove(int position) {\r\n        if (!itemList.isEmpty()) {\r\n            itemList.remove(position);\r\n        }\r\n        notifyItemRemoved(position);\r\n        notifyItemRangeChanged(position, getItemCount());\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return itemList.get(position).type;\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return itemList.size();\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public BaseViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        if (viewType == HEADER) {\r\n            ItemListHeaderBinding binding = ItemListHeaderBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false);\r\n            return new HeaderViewHolder(binding);\r\n        } else if (viewType == LOAD_MORE) {\r\n            ItemLoadMoreBinding binding = ItemLoadMoreBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false);\r\n            return new LoadMoreViewHolder(binding);\r\n        } else {    // DATA\r\n            return createDataView(parent);\r\n        }\r\n    }\r\n\r\n    protected abstract BaseViewHolder createDataView(@NonNull ViewGroup parent);\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull BaseViewHolder holder, int position) {\r\n        holder.onBind(position);\r\n    }\r\n\r\n    public interface ItemClickListener<T> {\r\n        void onItemClick(T item);\r\n\r\n        void onAction1Click(Header item);\r\n\r\n        void onAction2Click(Header item);\r\n    }\r\n\r\n    public static class Header {\r\n        private String header;\r\n        private String subHeader;\r\n        private @DrawableRes\r\n        int action1Res;\r\n        private @DrawableRes\r\n        int action2Res;\r\n\r\n        public Header(String header, String subHeader, @DrawableRes int action1Res, @DrawableRes int action2Res) {\r\n            this.header = header;\r\n            this.subHeader = subHeader;\r\n            this.action1Res = action1Res;\r\n            this.action2Res = action2Res;\r\n        }\r\n\r\n        public String getHeader() {\r\n            return header;\r\n        }\r\n\r\n        public String getSubHeader() {\r\n            return subHeader;\r\n        }\r\n\r\n        public int getAction1Res() {\r\n            return action1Res;\r\n        }\r\n\r\n        public int getAction2Res() {\r\n            return action2Res;\r\n        }\r\n    }\r\n\r\n    private static class LoadMoreViewHolder extends BaseViewHolder {\r\n        ItemLoadMoreBinding binding;\r\n\r\n        public LoadMoreViewHolder(ItemLoadMoreBinding binding) {\r\n            super(binding.getRoot());\r\n            this.binding = binding;\r\n        }\r\n\r\n        @Override\r\n        public void onBind(int position) {\r\n            super.onBind(position);\r\n        }\r\n\r\n        @Override\r\n        protected void clear() {\r\n\r\n        }\r\n    }\r\n\r\n    private class HeaderViewHolder extends BaseViewHolder {\r\n        ItemListHeaderBinding viewBinding;\r\n\r\n        public HeaderViewHolder(ItemListHeaderBinding viewBinding) {\r\n            super(viewBinding.getRoot());\r\n            this.viewBinding = viewBinding;\r\n        }\r\n\r\n        @Override\r\n        public void onBind(int position) {\r\n            super.onBind(position);\r\n            Header header = itemList.get(position).header;\r\n            if (header != null) {\r\n                if (StringUtils.isNullOrEmpty(header.getHeader())) {\r\n                    viewBinding.tvHeader.setVisibility(View.GONE);\r\n                } else {\r\n                    viewBinding.tvHeader.setText(header.getHeader());\r\n                    viewBinding.tvHeader.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                if (StringUtils.isNullOrEmpty(header.getSubHeader())) {\r\n                    viewBinding.tvSubHeader.setVisibility(View.GONE);\r\n                } else {\r\n                    viewBinding.tvSubHeader.setText(header.getSubHeader());\r\n                    viewBinding.tvSubHeader.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                if (header.getAction1Res() > 0) {\r\n                    viewBinding.ivAction1.setImageResource(header.getAction1Res());\r\n                    viewBinding.ivAction1.setOnClickListener(v -> itemClickListener.onAction1Click(header));\r\n                    viewBinding.ivAction1.setVisibility(View.VISIBLE);\r\n                } else {\r\n                    viewBinding.ivAction1.setVisibility(View.GONE);\r\n                }\r\n\r\n                if (header.getAction2Res() > 0) {\r\n                    viewBinding.ivAction2.setImageResource(header.getAction2Res());\r\n                    viewBinding.ivAction2.setOnClickListener(v -> itemClickListener.onAction2Click(header));\r\n                    viewBinding.ivAction2.setVisibility(View.VISIBLE);\r\n                } else {\r\n                    viewBinding.ivAction2.setVisibility(View.GONE);\r\n                }\r\n            } else {\r\n                AppLogger.e(\"Item at position \" + position + \" is not a header\");\r\n            }\r\n        }\r\n\r\n        @Override\r\n        protected void clear() {\r\n            viewBinding.tvHeader.setVisibility(View.GONE);\r\n            viewBinding.tvSubHeader.setVisibility(View.GONE);\r\n            viewBinding.ivAction1.setVisibility(View.GONE);\r\n            viewBinding.ivAction2.setVisibility(View.GONE);\r\n        }\r\n    }\r\n\r\n    protected static class BaseAdapterModel<T> {\r\n        private @ITEM_TYPE\r\n        int type;\r\n        private Header header;\r\n        private T data;\r\n\r\n        // Constructor for LOAD_MORE\r\n        private BaseAdapterModel() {\r\n            this.type = LOAD_MORE;\r\n            this.header = null;\r\n            this.data = null;\r\n        }\r\n\r\n        // Constructor for HEADER\r\n        private BaseAdapterModel(@Nullable Header header) {\r\n            this.type = HEADER;\r\n            this.header = header;\r\n            this.data = null;\r\n        }\r\n\r\n        // Constructor for DATA\r\n        private BaseAdapterModel(T data) {\r\n            this.type = DATA;\r\n            this.header = null;\r\n            this.data = data;\r\n        }\r\n\r\n        public T getData() {\r\n            return data;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/core/base/BaseRecyclerViewAdapter.java b/app/src/main/java/com/mvvm/java/core/base/BaseRecyclerViewAdapter.java
--- a/app/src/main/java/com/mvvm/java/core/base/BaseRecyclerViewAdapter.java	
+++ b/app/src/main/java/com/mvvm/java/core/base/BaseRecyclerViewAdapter.java	
@@ -77,7 +77,7 @@
         }
     }
 
-    public void addData(List<T> dataList) {
+    public void addData(@NonNull List<T> dataList) {
         for (T data : dataList) {
             itemList.add(new BaseAdapterModel<>(data));
         }
@@ -171,7 +171,7 @@
     private static class LoadMoreViewHolder extends BaseViewHolder {
         ItemLoadMoreBinding binding;
 
-        public LoadMoreViewHolder(ItemLoadMoreBinding binding) {
+        public LoadMoreViewHolder(@NonNull ItemLoadMoreBinding binding) {
             super(binding.getRoot());
             this.binding = binding;
         }
@@ -182,7 +182,7 @@
         }
 
         @Override
-        protected void clear() {
+        public void clear() {
 
         }
     }
@@ -190,7 +190,7 @@
     private class HeaderViewHolder extends BaseViewHolder {
         ItemListHeaderBinding viewBinding;
 
-        public HeaderViewHolder(ItemListHeaderBinding viewBinding) {
+        public HeaderViewHolder(@NonNull ItemListHeaderBinding viewBinding) {
             super(viewBinding.getRoot());
             this.viewBinding = viewBinding;
         }
@@ -235,7 +235,7 @@
         }
 
         @Override
-        protected void clear() {
+        public void clear() {
             viewBinding.tvHeader.setVisibility(View.GONE);
             viewBinding.tvSubHeader.setVisibility(View.GONE);
             viewBinding.ivAction1.setVisibility(View.GONE);
Index: app/src/main/java/com/mvvm/java/core/base/BaseViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.core.base;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport android.view.View;\r\n\r\npublic abstract class BaseViewHolder extends RecyclerView.ViewHolder {\r\n\r\n    private int currentPosition;\r\n\r\n    public BaseViewHolder(View itemView) {\r\n        super(itemView);\r\n    }\r\n\r\n    protected abstract void clear();\r\n\r\n    public void onBind(int position) {\r\n        currentPosition = position;\r\n        clear();\r\n    }\r\n\r\n    public int getCurrentPosition() {\r\n        return currentPosition;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/core/base/BaseViewHolder.java b/app/src/main/java/com/mvvm/java/core/base/BaseViewHolder.java
--- a/app/src/main/java/com/mvvm/java/core/base/BaseViewHolder.java	
+++ b/app/src/main/java/com/mvvm/java/core/base/BaseViewHolder.java	
@@ -1,8 +1,9 @@
 package com.mvvm.java.core.base;
 
-import androidx.recyclerview.widget.RecyclerView;
 import android.view.View;
 
+import androidx.recyclerview.widget.RecyclerView;
+
 public abstract class BaseViewHolder extends RecyclerView.ViewHolder {
 
     private int currentPosition;
@@ -11,7 +12,7 @@
         super(itemView);
     }
 
-    protected abstract void clear();
+    public abstract void clear();
 
     public void onBind(int position) {
         currentPosition = position;
Index: app/src/main/java/com/mvvm/java/sample/welcome/DotIndicator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.sample.welcome;public class DotIndicator {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/sample/welcome/DotIndicator.java b/app/src/main/java/com/mvvm/java/sample/welcome/DotIndicator.java
--- a/app/src/main/java/com/mvvm/java/sample/welcome/DotIndicator.java	
+++ b/app/src/main/java/com/mvvm/java/sample/welcome/DotIndicator.java	
@@ -1,2 +1,14 @@
-package com.mvvm.java.sample.welcome;public class DotIndicator {
-}
+package com.mvvm.java.sample.welcome;
+
+@Deprecated
+public class DotIndicator {
+    private boolean isActive = false;
+
+    public boolean isActive() {
+        return isActive;
+    }
+
+    public void setActive(boolean active) {
+        isActive = active;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/mvvm/java/core/di/component/ActivityComponent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mvvm.java.core.di.component;\r\n\r\nimport com.mvvm.java.core.di.PerActivity;\r\nimport com.mvvm.java.core.di.module.ActivityModule;\r\n\r\nimport dagger.Component;\r\n\r\n@PerActivity\r\n@Component(dependencies = ApplicationComponent.class, modules = ActivityModule.class)\r\npublic interface ActivityComponent {\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/mvvm/java/core/di/component/ActivityComponent.java b/app/src/main/java/com/mvvm/java/core/di/component/ActivityComponent.java
--- a/app/src/main/java/com/mvvm/java/core/di/component/ActivityComponent.java	
+++ b/app/src/main/java/com/mvvm/java/core/di/component/ActivityComponent.java	
@@ -2,6 +2,13 @@
 
 import com.mvvm.java.core.di.PerActivity;
 import com.mvvm.java.core.di.module.ActivityModule;
+import com.mvvm.java.sample.author.AuthorFragment;
+import com.mvvm.java.sample.container.MainActivity;
+import com.mvvm.java.sample.home.HomeFragment;
+import com.mvvm.java.sample.login.LoginActivity;
+import com.mvvm.java.sample.login.RegisterActivity;
+import com.mvvm.java.sample.splash.SplashActivity;
+import com.mvvm.java.sample.welcome.WelcomeActivity;
 
 import dagger.Component;
 
@@ -9,4 +16,17 @@
 @Component(dependencies = ApplicationComponent.class, modules = ActivityModule.class)
 public interface ActivityComponent {
 
-}
+    void inject(SplashActivity activity);
+
+    void inject(WelcomeActivity activity);
+
+    void inject(LoginActivity activity);
+
+    void inject(RegisterActivity activity);
+
+    void inject(MainActivity activity);
+
+    void inject(HomeFragment fragment);
+
+    void inject(AuthorFragment fragment);
+}
\ No newline at end of file
